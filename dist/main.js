(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>u});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),c=t(667),s=t.n(c),d=new URL(t(88),t.b),l=i()(r()),A=s()(d);l.push([n.id,"/* GENERAL  */\n\n* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n    font-family:Arial, Helvetica, sans-serif;\n}\n\nbody {\n    /* background-color: rgba(224, 175, 83, 0.767); */\n    background-image: url("+A+");\n}\n\n.content {\n    width: 100%;\n    height: 100%;\n    align-self: center;\n    \n}\n\n.content-div {\n    display: flex;\n    flex-direction: column;\n    gap: 50px;\n    width: 960px;\n\n    min-height: 85vh;\n    height: 100%;\n    justify-content: flex-start;\n    align-items: center;\n\n    padding: 50px;\n    margin: 0 auto;\n    margin-top: 50px;\n\n    border-radius: 6px;\n\n    background-color: rgba(0, 0, 0, 0.61);\n\n}\n\na {\n    color:rgb(255, 174, 0);\n}\n\nfooter {\n    background-color: rgba(0, 0, 0, 0.61);\n}\n\n\n/* CONTENTS OF NAV JS BELOW */\n\n.nav-div {\n    display: flex;\n    justify-content: space-around;\n    \n    align-items: center;\n    background-color: rgba(7, 3, 0, 0.884);\n    color: white;\n\n}\n\n.nav-div ul {\n    width: 70vw;\n    display: flex;\n    list-style-type: none;\n    justify-content: center;\n    gap: 30px;\n}\n\n.nav-div ul li {\n    flex: 1 auto;\n    text-align: center;\n    padding: 20px;\n    font-size: 3rem;\n    cursor: pointer;\n}\n\n.nav-div ul li:hover {\n    background-color:rgb(255, 174, 0);\n}\n\n.active-nav {\n    background-color: rgb(255, 208, 0);\n    color: black;\n}\n\n\n\n\n/* CONTENTS OF HOME JS BELOW */\n\n\n\n.content-div h1 {\n    color: white;\n}\n\n.home-inner-div {\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n\n    padding: 20px;\n    border-radius: 6px;\n\n    width: 300px;\n    height: 200px;\n    background-color: rgb(29, 26, 7);\n    color: white;\n\n    box-shadow: 5px 2px 30px 1px rgba(236, 233, 233, 0.466);\n}\n\n/* CONTENTS OF CONTACT JS BELOW */\n\n/* Though there's nothing because everything looks the same. Maybe i'll make it look better sometime in the future */","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,aAAa;;AAEb;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;IACtB,wCAAwC;AAC5C;;AAEA;IACI,iDAAiD;IACjD,yDAAyC;AAC7C;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;;AAEtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,YAAY;;IAEZ,gBAAgB;IAChB,YAAY;IACZ,2BAA2B;IAC3B,mBAAmB;;IAEnB,aAAa;IACb,cAAc;IACd,gBAAgB;;IAEhB,kBAAkB;;IAElB,qCAAqC;;AAEzC;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,qCAAqC;AACzC;;;AAGA,6BAA6B;;AAE7B;IACI,aAAa;IACb,6BAA6B;;IAE7B,mBAAmB;IACnB,sCAAsC;IACtC,YAAY;;AAEhB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,qBAAqB;IACrB,uBAAuB;IACvB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,aAAa;IACb,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,iCAAiC;AACrC;;AAEA;IACI,kCAAkC;IAClC,YAAY;AAChB;;;;;AAKA,8BAA8B;;;;AAI9B;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,uBAAuB;;IAEvB,aAAa;IACb,kBAAkB;;IAElB,YAAY;IACZ,aAAa;IACb,gCAAgC;IAChC,YAAY;;IAEZ,uDAAuD;AAC3D;;AAEA,iCAAiC;;AAEjC,oHAAoH",sourcesContent:["/* GENERAL  */\n\n* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n    font-family:Arial, Helvetica, sans-serif;\n}\n\nbody {\n    /* background-color: rgba(224, 175, 83, 0.767); */\n    background-image: url(\"./background.jpg\");\n}\n\n.content {\n    width: 100%;\n    height: 100%;\n    align-self: center;\n    \n}\n\n.content-div {\n    display: flex;\n    flex-direction: column;\n    gap: 50px;\n    width: 960px;\n\n    min-height: 85vh;\n    height: 100%;\n    justify-content: flex-start;\n    align-items: center;\n\n    padding: 50px;\n    margin: 0 auto;\n    margin-top: 50px;\n\n    border-radius: 6px;\n\n    background-color: rgba(0, 0, 0, 0.61);\n\n}\n\na {\n    color:rgb(255, 174, 0);\n}\n\nfooter {\n    background-color: rgba(0, 0, 0, 0.61);\n}\n\n\n/* CONTENTS OF NAV JS BELOW */\n\n.nav-div {\n    display: flex;\n    justify-content: space-around;\n    \n    align-items: center;\n    background-color: rgba(7, 3, 0, 0.884);\n    color: white;\n\n}\n\n.nav-div ul {\n    width: 70vw;\n    display: flex;\n    list-style-type: none;\n    justify-content: center;\n    gap: 30px;\n}\n\n.nav-div ul li {\n    flex: 1 auto;\n    text-align: center;\n    padding: 20px;\n    font-size: 3rem;\n    cursor: pointer;\n}\n\n.nav-div ul li:hover {\n    background-color:rgb(255, 174, 0);\n}\n\n.active-nav {\n    background-color: rgb(255, 208, 0);\n    color: black;\n}\n\n\n\n\n/* CONTENTS OF HOME JS BELOW */\n\n\n\n.content-div h1 {\n    color: white;\n}\n\n.home-inner-div {\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n\n    padding: 20px;\n    border-radius: 6px;\n\n    width: 300px;\n    height: 200px;\n    background-color: rgb(29, 26, 7);\n    color: white;\n\n    box-shadow: 5px 2px 30px 1px rgba(236, 233, 233, 0.466);\n}\n\n/* CONTENTS OF CONTACT JS BELOW */\n\n/* Though there's nothing because everything looks the same. Maybe i'll make it look better sometime in the future */"],sourceRoot:""}]);const u=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],d=o.base?s[0]+o.base:s[0],l=a[d]||0,A="".concat(d," ").concat(l);a[d]=l+1;var u=t(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=r(p,o);o.byIndex=c,e.splice(c,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var s=o(n,r),d=0;d<a.length;d++){var l=t(a[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},88:(n,e,t)=>{n.exports=t.p+"bf154057826f1adbd59b.jpg"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{function n(){const n=document.getElementById("content"),e=document.createElement("div"),t=document.createElement("h1");t.innerHTML="Welcome to THE Restaurant!";const o=document.createElement("div"),r=document.createElement("p");r.innerHTML="A brand new restaurant coming near you! Don't miss out on an experience you could not possibly get anywhere else";const a=document.createElement("div"),i=document.createElement("p");i.innerHTML="There's info here. Good info! Such as location, times.. general info",e.classList.add("content-div"),e.id="homeDiv",o.classList.add("home-inner-div"),a.classList.add("home-inner-div"),n.appendChild(e),e.appendChild(t),e.appendChild(o),e.appendChild(a),o.appendChild(r),a.appendChild(i)}var e=t(379),o=t.n(e),r=t(795),a=t.n(r),i=t(569),c=t.n(i),s=t(565),d=t.n(s),l=t(216),A=t.n(l),u=t(589),p=t.n(u),m=t(426),h={};h.styleTagTransform=p(),h.setAttributes=d(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=A(),o()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals,function(){const n=document.getElementById("content"),e=document.createElement("div"),t=document.createElement("ul"),o=document.createElement("li"),r=document.createElement("li"),a=document.createElement("li");o.innerHTML="Home",r.innerHTML="Menu",a.innerHTML="Contact",n.appendChild(e),e.appendChild(t),t.appendChild(o),t.appendChild(r),t.appendChild(a),e.classList.add("nav-div"),o.classList.add("nav-li","active-nav"),r.classList.add("nav-li"),a.classList.add("nav-li")}(),n(),function(){const e=document.getElementById("content"),t=e.getElementsByClassName("nav-li");for(let n of t)n.addEventListener("click",o);function o(o){const r=o.target.innerHTML;switch(function(){const n=e.querySelector("#homeDiv"),t=e.querySelector("#menuDiv"),o=e.querySelector("#contactDiv");n?.remove(),t?.remove(),o?.remove()}(),function(n){for(let n of t)n.classList.remove("active-nav");for(let e of t)e.innerText===n&&e.classList.toggle("active-nav")}(r),r){case"Home":n();break;case"Menu":!function(){const n=document.getElementById("content"),e=document.createElement("div"),t=document.createElement("h1");t.innerHTML="Welcome to THE Restaurant MENUUU!";const o=document.createElement("div"),r=document.createElement("p");r.innerHTML="If this were an actual restaurant there might have been some menu items here and different foods here.";const a=document.createElement("div"),i=document.createElement("p");i.innerHTML="There's info here. Good info! Such as location, times.. general info",e.classList.add("content-div"),e.id="menuDiv",o.classList.add("home-inner-div"),a.classList.add("home-inner-div"),n.appendChild(e),e.appendChild(t),e.appendChild(o),e.appendChild(a),o.appendChild(r),a.appendChild(i)}();break;case"Contact":!function(){const n=document.getElementById("content"),e=document.createElement("div"),t=document.createElement("h1");t.innerHTML="Welcome to THE Restaurant CONTAAACTS!";const o=document.createElement("div"),r=document.createElement("p");r.innerHTML="Contact us at.. who knows. Maybe don't contact us.";const a=document.createElement("div"),i=document.createElement("p");i.innerHTML="There's info here. Good info! Such as location, times.. general info, possibly some e-mails and phone-numbers!",e.classList.add("content-div"),e.id="contactDiv",o.classList.add("home-inner-div"),a.classList.add("home-inner-div"),n.appendChild(e),e.appendChild(t),e.appendChild(o),e.appendChild(a),o.appendChild(r),a.appendChild(i)}()}}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,